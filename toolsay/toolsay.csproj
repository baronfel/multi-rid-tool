<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>

    <GenerateNuspecDependsOn>CheckToolTypesThatDoNotWorkForPreview6;CheckToolTypeIsValid;$(GenerateNuspecDependsOn);</GenerateNuspecDependsOn>
    <CopyOutputSymbolsToPublishDirectory>false</CopyOutputSymbolsToPublishDirectory>
    <!-- .NET Tool properties -->
    <PackAsTool>true</PackAsTool>
    <ToolCommandName>toolsay</ToolCommandName>
    <PackageId>toolsay</PackageId>
    <PackageVersion>1.0.0</PackageVersion>
    <Authors>Chet Husk</Authors>
    <Description>A .NET tool that converts text to ASCII art using Spectre.Console</Description>
    <PackageTags>ascii;art;figlet;console;tool</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <_TestingRIDs>linux-x64;linux-arm64;win-x64;win-arm64;osx-arm64;</_TestingRIDs>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Data.SqlClient" Version="6.1.1" />
    <PackageReference Include="Spectre.Console" Version="0.51.1" />
    <PackageReference Include="System.CommandLine" Version="2.0.0-rc.1.25451.107" />
  </ItemGroup>

  <PropertyGroup Condition="'$(ToolType)' == 'agnostic' Or '$(ToolType)' == ''">
    <!-- This is the default variation, which will run on any system that has .NET 10 preview 6 runtimes installed. -->
  </PropertyGroup>

  <PropertyGroup Condition="'$(ToolType)' == 'specific'">
    <!-- This variation will run on any system that has .NET 10 preview 6 runtimes installed, but it will only run on the specific platform it was built for. -->
    <!-- This may not actually work? -->
    <RuntimeIdentifiers>$(_TestingRIDs)</RuntimeIdentifiers>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ToolType)' == 'self-contained'">
    <!-- This variation will create a self-contained executable that includes the .NET runtime and all dependencies. -->
    <RuntimeIdentifiers>$(_TestingRIDs)</RuntimeIdentifiers>
    <PublishSelfContained>true</PublishSelfContained>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ToolType)' == 'trimmed'">
    <!-- This variation will create a self-contained executable that includes the .NET runtime and all dependencies, but it will also trim unused code to reduce the size of the executable. -->
    <RuntimeIdentifiers>$(_TestingRIDs)</RuntimeIdentifiers>
    <PublishSelfContained>true</PublishSelfContained>
    <PublishTrimmed>true</PublishTrimmed>
  </PropertyGroup>

  <PropertyGroup Condition="'$(ToolType)' == 'aot'">
    <!-- This variation will create a self-contained executable that is compiled ahead of time for the specific platform. -->
    <RuntimeIdentifiers>$(_TestingRIDs)</RuntimeIdentifiers>
    <PublishAot>true</PublishAot>
    <StripSymbols>true</StripSymbols>
  </PropertyGroup>

  <Target Name="CheckToolTypeIsValid">
    <Error Condition="'@(ToolType)' != '' and ('$(ToolType)' != 'agnostic' And '$(ToolType)' != 'specific' And '$(ToolType)' != 'self-contained' And '$(ToolType)' != 'trimmed' And '$(ToolType)' != 'aot')" Text="Invalid ToolType value: $(ToolType). Valid values are agnostic, specific, self-contained, trimmed, aot." />
  </Target>

  <Target Name="CheckToolTypesThatDoNotWorkForPreview6" Condition="$(NetCoreSDKVersion.StartsWith('10.0.100-preview.6'))">
    <!-- <Error Condition="'$(ToolType)' == 'specific'" Text="Framework-dependent, platform-specific Tools doesn't work for .NET 10 preview 6, see https://github.com/dotnet/sdk/issues/49494 for details." /> -->
    <Error Condition="'$(ToolType)' == 'trimmed'" Text="Trimmed tools don't work for .NET 10 preview 6, see https://github.com/dotnet/sdk/issues/49493 for details." />
  </Target>

  <!-- TODO: log the fact that this doesn't work today as a bug in the SDK/NuGet. -->
  <Target Name="CleanPackageFiles" DependsOnTargets="_GetOutputItemsFromPack" AfterTargets="Clean" Condition="'$(IsInnerBuild)' != 'true'">
    <ItemGroup>
      <_PackageFilesToDelete Include="$(PackageOutputPath)/*.nupkg" />
      <_PackageFilesToDelete Include="$(NuspecOutputPath)/*.nuspec" />
    </ItemGroup>
    <Delete Files="@(_PackageFilesToDelete)" />
  </Target>

</Project>
